#demo:
#  to demo how to ignore a service

nginx:   #image size: 60M
  build: ./nginx
  # If you need access from host, uncomment below section
  # ports:
  #   - "80:80"
  links:
    - phpfpm

phpfpm:   # image size: 390+M
  build: ./php_fpm
  # If you need access from host, uncomment below section
  #ports:
  #  - "9000:9000"

redis_master:   #image size: 15M
  image: redis:3-alpine
  # If you need access from host, uncomment below section
  #ports:
  #  - "6379:6379"

redis_slave:   #image size: 15M
  image: redis:3-alpine
  command: redis-server --slaveof redis_master 6379
  # If you need access from host, uncomment below section
  #ports:
  #  - "6379:6379"
  links:
    - redis_master

mongo:    #image size: 79M
  image: mvertes/alpine-mongo:3.0.6
  command: mongod --smallfiles
  #environment:
  #  - MONGODB_PASS=myawsomemongopw
  # If you need access from host, uncomment below section
  #ports:
  #  - "27017:27017"

apache:   #image size: 190+M
  build: ./apache
  # If you need access from host, uncomment below section
  #ports:
  #  - "80:80"

mysql:    #image size: 350+M
  image: mysql:5.7
  environment:
    - MYSQL_ROOT_PASSWORD=myawsomerootpw
  # If you need access from host, uncomment below section
  #ports:
  #  - "3306:3306"

tomcat:     #image size: 180+M
  build: ./tomcat
  # If you need access from host, uncomment below section
  # ports:
  #   - "8080:8080"  # server port
  #   #- "7199:7199"  # jmx port

#mcache:    #image size: 130+M
#  image: memcached:1.4
#  # If you need access from host, uncomment below section
#  #ports:
#  #  - "11211:11211"
#
#postgres:    #image size: 27M
#  image: postgres:9.6-alpine
#  environment:
#    - POSTGRES_PASSWORD=myawsomepostgrespw
#  # If you need access from host, uncomment below section
#  #ports:
#  #  - "5432:5432"
#
#couchbase:    #image size: 370+M
#  image: couchbase:4.0.0
#  # you need to set passwd(already set in conf.d/couchbase.yaml) in the couchbase web page
#  # If you need access from host, uncomment below section
#  ports:
#    - "8091:8091"
#
#couchdb:    #image size: 530+M
#  image: frodenas/couchdb:1.6
#  environment:
#    - COUCHDB_USERNAME=couchdb
#    - COUCHDB_PASSWORD=myawsomecouchdbpw
#  # If you need access from host, uncomment below section
#  #ports:
#  #  - "5984:5984"
#
#solr:    #image size: 560+M
#  build: ./solr  # set ENABLE_REMOTE_JMX_OPTS=true
#  # If you need access from host, uncomment below section
#  ports:
#    - "8983:8983"   # solr port
#    #- "18983:18983"   # jmx port
#  volumes:
#    - data:/opt/solr/server/solr/mycores
#  entrypoint:
#    - docker-entrypoint.sh
#    - solr-precreate
#    - mycore
#
#activemq:    #images size: 540+M
#  build: ./activemq # set jmx options
#  # If you need access from host, uncomment below section
#  ports:
#    - "8161:8161"  # activemq port
#    #- "7199:7199"  # jmx port
#
#elasticsearch:    #image size: 340+M
#  image: elasticsearch:2.1
#  # If you need access from host, uncomment below section
#  ports:
#    - "9200:9200"
#    - "9300:9300"
#
#zookeeper:    # image size: 155+M
#  image: jplock/zookeeper:3.4.8
#  ports:
#    - "2181:2181"
#
#kafka:    # image size: 215+M
#  build: ./kafka
#  ports:
#    - "9092:9092"   # server port
#    #- "9999:9999"   # jmx port
#  links:
#    - zookeeper:zk
#  environment:
#    - JMX_PORT=9999
#    - KAFKA_ADVERTISED_HOST_NAME=10.128.17.30  # set to your docker host ip
#    - KAFKA_ZOOKEEPER_CONNECT=zk:2181
#    - KAFKA_CREATE_TOPICS=test:1:1
#  volumes:
#    - /var/run/docker.sock:/var/run/docker.sock
#
#kafka-producer:
#  build: ./kafka-producer
#  links:
#    - kafka
#    - zookeeper:zk
#  environment:
#    - JMX_PORT=9998
#
#kafka-consumer:
#  build: ./kafka-consumer
#  links:
#    - zookeeper:zk
#  environment:
#    - JMX_PORT=9997
#
#cassandra:    # image size: 370+M
#  build: ./cassandra
#  # If you need access from host, uncomment below section
#  ports:
#    - "7000:7000"   # server port
#    #- "7199:7199"   # jmx port
#  environment:
#    - LOCAL_JMX=no
#
#cassandra22:    # image size: 370+M
#  build: ./cassandra22
#  # If you need access from host, uncomment below section
#  ports:
#    - "7000:7000"   # server port
#    #- "7199:7199"   # jmx port
#  environment:
#    - LOCAL_JMX=no
#
#rabbitmq:     # image size: 36M
#  image: gonkulatorlabs/rabbitmq:3.6.0
#  # If you need access from host, uncomment below section
#  # ports:
#  #   - "15672:15672"   # management port
#
#mesos_master:    # image size: 330+M
#  image: mesoscloud/mesos-master:0.24.1-centos-7
#  environment:
#    - MESOS_ZK=zk://zookeeper:2181/mesos
#    - MESOS_QUORUM=1
#  restart: always
#  links:
#    - zookeeper
#  ports:
#    - "5050:5050"
#
#mesos_slave:    # image size: 410+M
#  image: mesoscloud/mesos-slave:0.24.1-centos-7
#  environment:
#    - MESOS_MASTER=zk://zookeeper:2181/mesos
#  volumes:
#    - /sys/fs/cgroup:/sys/fs/cgroup
#    - /var/run/docker.sock:/var/run/docker.sock
#  restart: always
#  privileged: true
#  links:
#    - zookeeper
#  ports:
#    - "5051:5051"
#
#marathon:    # image size: 275+M
#  image: mesoscloud/marathon:1.1.1-centos-7
#  environment:
#    - MARATHON_MASTER=zk://zookeeper:2181/mesos
#    - MARATHON_ZK=zk://zookeeper:2181/marathon
#  restart: always
#  links:
#    - zookeeper
#  ports:
#    - "8080:8080"
#
#gearmand:     # image size: 211+M
#  image: pataquets/gearmand
#  # If you need access from host, uncomment below section
#  ports:
#    - "4730:4730"
#
#haproxy:     # image size: 12M
#  build: ./haproxy
#  # If you need access from host, uncomment below section
#  ports:
#    - "3836:3835"
#  links:
#    - nginx
#
#web:
#  # demo redis service.
#  build: ./web
#  links:
#    - redis
#  ports:
#    - "5001:5000"

oneapm:
  build: ./oneapm
  hostname: $HOSTNAME
  environment:
    #- CI_URL=default_OneAPM_ci_collector
    - LICENSE_KEY=your-license-key
    - TAGS=oneapm-ci-agent-docker-test, foo
    - LOG_LEVEL=INFO  # CRITICAL, ERROR, WARNING, INFO, DEBUG
    #- PROXY_HOST=
    #- PROXY_PORT=
    #- PROXY_USER=
    #- PROXY_PASSWORD=
  volumes:
    - /etc/localtime:/etc/localtime:ro
    - ./conf.d:/conf.d:ro
    - /var/run/docker.sock:/var/run/docker.sock
    - /proc/:/host/proc/:ro
    - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro
  links:
    # Service you want to monitor.
    #- demo        comment the service you don't want.
    - redis_master
    - redis_slave
    - nginx
    - mongo
    - mysql
    - apache
    - tomcat
    - phpfpm
    #- mcache
    #- postgres
    #- couchbase
    #- couchdb
    #- activemq
    #- solr
    #- elasticsearch
    #- kafka
    #- kafka-producer
    #- kafka-consumer
    #- cassandra
    #- cassandra22
    #- rabbitmq
    #- zookeeper
    #- mesos_master
    #- mesos_slave
    #- gearmand
    #- haproxy
